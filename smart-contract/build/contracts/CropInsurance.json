{
  "contractName": "CropInsurance",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "policyId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "farmer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PayoutTriggered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "policyId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "farmer",
          "type": "address"
        }
      ],
      "name": "PolicyAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "policyId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "farmer",
          "type": "address"
        }
      ],
      "name": "PolicyRegistered",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "nextPolicyId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "policies",
      "outputs": [
        {
          "internalType": "address",
          "name": "farmerAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "farmerName",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "landSize",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "cropType",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "premiumAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "payoutAmount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "insuranceType",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "isAccepted",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isPaid",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_farmerAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_farmerName",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_landSize",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_cropType",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_premiumAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_payoutAmount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_insuranceType",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_location",
          "type": "string"
        }
      ],
      "name": "registerPolicy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_policyId",
          "type": "uint256"
        }
      ],
      "name": "acceptInsurance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_policyId",
          "type": "uint256"
        }
      ],
      "name": "triggerPayout",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"farmer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PayoutTriggered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"farmer\",\"type\":\"address\"}],\"name\":\"PolicyAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"farmer\",\"type\":\"address\"}],\"name\":\"PolicyRegistered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_policyId\",\"type\":\"uint256\"}],\"name\":\"acceptInsurance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextPolicyId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"policies\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"farmerAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"farmerName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"landSize\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"cropType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"premiumAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payoutAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"insuranceType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isAccepted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPaid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_farmerAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_farmerName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_landSize\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_cropType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_premiumAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_payoutAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_insuranceType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_location\",\"type\":\"string\"}],\"name\":\"registerPolicy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_policyId\",\"type\":\"uint256\"}],\"name\":\"triggerPayout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/CropInsurance.sol\":\"CropInsurance\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"project:/contracts/CropInsurance.sol\":{\"keccak256\":\"0xeaf6e501e28b894ea96ee8503169040ad15fa7ac7f0fa41780681ec7126c3143\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c43b15fbf01bbcc6ce1bc12a4be226350eb7accf3b097a5e90012c534473a79\",\"dweb:/ipfs/QmRVGUNgnJptWvLbVh43ChQZtjR8wS4DLovSnVfa23ccY5\"]}},\"version\":1}",
  "bytecode": "0x60808060405234610097573315610068576000805433600160a060020a0319821681178355604051929091600160a060020a0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a360018055611111908161009d8239f35b807f1e4fbdf7000000000000000000000000000000000000000000000000000000006024925260006004820152fd5b600080fdfe608080604052600436101561001d575b50361561001b57600080fd5b005b7c0100000000000000000000000000000000000000000000000000000000600035049081636f9fb98a14610e3d57508063715018a614610dd757806376653b3a14610cfd5780638da5cb5b14610cd6578063b1b358d414610ac6578063c5b2910d1461025e578063cad0b8db14610240578063d3e894831461014d5763f2fde38b146100a9573861000f565b34610148576020366003190112610148576100c2610e57565b6100ca610ff6565b600160a060020a038091169081156101175760005482600160a060020a0319821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b60246040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260006004820152fd5b600080fd5b346101485760203660031901126101485760043560005260026020526040600020600160a060020a0381541661018560018301610f11565b9160ff6102246002830154926102166101a060038301610f11565b9460048301549060058401546101fe6101bb60068701610f11565b9260086101ca60078901610f11565b970154996101eb6040519d8e9d8e528d610140908160208201520190610fb6565b9160408d01528b820360608d0152610fb6565b9260808a015260a089015287820360c0890152610fb6565b9085820360e0870152610fb6565b9161010090828116151582860152041615156101208301520390f35b34610148576000366003190112610148576020600154604051908152f35b346101485761010036600319011261014857610278610e57565b60243567ffffffffffffffff811161014857610298903690600401610e6d565b60649291923567ffffffffffffffff8111610148576102bb903690600401610e6d565b909160c43567ffffffffffffffff8111610148576102dd903690600401610e6d565b9160e43567ffffffffffffffff8111610148576102fe903690600401610e6d565b929093610309610ff6565b60843560a4351115610a7f57600160a060020a03881615610a385782156109f15785156109aa5760015498604051978861014081011067ffffffffffffffff6101408b011117610705576103b99761037d610391936103ad97600160a060020a038e6101408f01604052168d523691611056565b60208b015260443560408b01523691611056565b6060880152608435608088015260a43560a08801523691611056565b60c08501523691611056565b60e0820152600061010082015260006101208201528260005260026020526040600020600160a060020a03825116600160a060020a0319825416178155602082015180519067ffffffffffffffff821161070557819061041c6001850154610e9b565b601f8111610957575b50602090601f83116001146108e3576000926108d8575b5050816002029160080260020a6000190419161760018201555b60408201516002820155606082015180519067ffffffffffffffff82116107055781906104866003850154610e9b565b601f8111610885575b50602090601f831160011461081157600092610806575b5050816002029160080260020a6000190419161760038201555b6080820151600482015560a0820151600582015560c082015180519067ffffffffffffffff82116107055781906104fa6006850154610e9b565b601f81116107b3575b50602090601f831160011461073f57600092610734575b5050816002029160080260020a6000190419161760068201555b60e082015180519067ffffffffffffffff8211610705576105586007840154610e9b565b601f81116106be575b50602090601f83116001146106495760089392916000918361063e575b50508160020291840260020a6000190419161760078201555b019061010081015115159060ff61ff0061010061012086549401511515021692169061ffff19161717905560015491600019831461060f57600160209301600155600160a060020a036040519216817f5647077ba6faf0b3176f8589f0d752dc156994057008b88157cf05f35069c31e600080a38152f35b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b01519050878061057e565b906007840160005260206000209160005b601f19851681106106a65750926001926002926008969583601f1981161061068c575b50505002016007820155610597565b0151601f83168702840a600019041916905588808061067d565b9192602060018192868501518155019401920161065a565b6007840160005260206000206020601f8501048101602085106106fe575b6020601f840104820181106106f2575050610561565b600081556001016106dc565b50806106dc565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b01519050868061051a565b91506006840160005260206000209160005b601f198516811061079b5750918391600293600195601f19811610610780575b50505002016006820155610534565b01516008601f841602840a6000190419169055878080610771565b91926020600181928685015181550194019201610751565b9091506006840160005260206000206020601f8501048101602085106107ff575b90849392915b6020601f840104820181106107f0575050610503565b600081558594506001016107da565b50806107d4565b0151905086806104a6565b91506003840160005260206000209160005b601f198516811061086d5750918391600293600195601f19811610610852575b505050020160038201556104c0565b01516008601f841602840a6000190419169055878080610843565b91926020600181928685015181550194019201610823565b9091506003840160005260206000206020601f8501048101602085106108d1575b90849392915b6020601f840104820181106108c257505061048f565b600081558594506001016108ac565b50806108a6565b01519050868061043c565b91506001840160005260206000209160005b601f198516811061093f5750918391600293600195601f19811610610924575b50505002016001820155610456565b01516008601f841602840a6000190419169055878080610915565b919260206001819286850151815501940192016108f5565b9091506001840160005260206000206020601f8501048101602085106109a3575b90849392915b6020601f84010482018110610994575050610425565b6000815585945060010161097e565b5080610978565b606460405160e560020a62461bcd02815260206004820152601960248201527f43726f7020747970652063616e6e6f7420626520656d707479000000000000006044820152fd5b606460405160e560020a62461bcd02815260206004820152601b60248201527f4661726d6572206e616d652063616e6e6f7420626520656d70747900000000006044820152fd5b606460405160e560020a62461bcd02815260206004820152601660248201527f496e76616c6964206661726d65722061646472657373000000000000000000006044820152fd5b606460405160e560020a62461bcd02815260206004820152601a60248201527f5061796f7574206d75737420657863656564207072656d69756d0000000000006044820152fd5b346101485760208060031936011261014857600435610ae3610ff6565b80151580610ccb575b610af59061108d565b8060005260028252604060002090600882019182549260ff841615610c845761010060ff81860416610c3d573031946005840154809610610bf65794600094600160a060020a038695869586958b9a61ff001916179055541680917f7884580f743f908c98258afac53f9e0929cd6787b3488df80e096df15409ef8f89604051868152a35af13d15610bf1573d610b8b8161103a565b90610b996040519283610eef565b81526000833d92013e5b15610baa57005b6064906040519060e560020a62461bcd0282526004820152601660248201527f5061796f7574207472616e73666572206661696c6564000000000000000000006044820152fd5b610ba3565b6064876040519060e560020a62461bcd0282526004820152601d60248201527f496e73756666696369656e7420636f6e74726163742062616c616e63650000006044820152fd5b6064866040519060e560020a62461bcd0282526004820152601860248201527f5061796f757420616c72656164792070726f63657373656400000000000000006044820152fd5b6064856040519060e560020a62461bcd0282526004820152601360248201527f506f6c696379206e6f74206163636570746564000000000000000000000000006044820152fd5b506001548110610aec565b34610148576000366003190112610148576020600160a060020a0360005416604051908152f35b3461014857602036600319011261014857600435610d19610ff6565b80151580610dcc575b610d2b9061108d565b8060005260026020526040600020600881019081549160ff8316610d85576001600160a060020a039360ff19161790555416907f6c9508f7faeda8225292a6475bdf4716fca5e172e82c68af926d2895b56cc63a600080a3005b606460405160e560020a62461bcd02815260206004820152601760248201527f506f6c69637920616c72656164792061636365707465640000000000000000006044820152fd5b506001548110610d22565b3461014857600036600319011261014857610df0610ff6565b6000805473ffffffffffffffffffffffffffffffffffffffff1981168255600160a060020a03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101485760003660031901126101485760209030318152f35b60043590600160a060020a038216820361014857565b9181601f840112156101485782359167ffffffffffffffff8311610148576020838186019501011161014857565b9060016002830492168015610ee5575b6020831014610eb657565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f1691610eab565b90601f8019910116810190811067ffffffffffffffff82111761070557604052565b9060405191826000825492610f2584610e9b565b908184526001948581169081600014610f945750600114610f51575b5050610f4f92500383610eef565b565b9093915060005260209081600020936000915b818310610f7c575050610f4f93508201013880610f41565b85548884018501529485019487945091830191610f64565b915050610f4f94506020925060ff191682840152151581028201013880610f41565b919082519283825260005b848110610fe2575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610fc1565b600160a060020a0360005416330361100a57565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fd5b67ffffffffffffffff811161070557601f01601f191660200190565b9291926110628261103a565b916110706040519384610eef565b829481845281830111610148578281602093846000960137010152565b1561109457565b606460405160e560020a62461bcd02815260206004820152601160248201527f496e76616c696420706f6c6963792049440000000000000000000000000000006044820152fdfea2646970667358221220c0d90f23bf2298b2097e1bf43d840a6b8c2fbcab494eb3b226f403f0a47c898364736f6c63430008140033",
  "deployedBytecode": "0x608080604052600436101561001d575b50361561001b57600080fd5b005b7c0100000000000000000000000000000000000000000000000000000000600035049081636f9fb98a14610e3d57508063715018a614610dd757806376653b3a14610cfd5780638da5cb5b14610cd6578063b1b358d414610ac6578063c5b2910d1461025e578063cad0b8db14610240578063d3e894831461014d5763f2fde38b146100a9573861000f565b34610148576020366003190112610148576100c2610e57565b6100ca610ff6565b600160a060020a038091169081156101175760005482600160a060020a0319821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b60246040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260006004820152fd5b600080fd5b346101485760203660031901126101485760043560005260026020526040600020600160a060020a0381541661018560018301610f11565b9160ff6102246002830154926102166101a060038301610f11565b9460048301549060058401546101fe6101bb60068701610f11565b9260086101ca60078901610f11565b970154996101eb6040519d8e9d8e528d610140908160208201520190610fb6565b9160408d01528b820360608d0152610fb6565b9260808a015260a089015287820360c0890152610fb6565b9085820360e0870152610fb6565b9161010090828116151582860152041615156101208301520390f35b34610148576000366003190112610148576020600154604051908152f35b346101485761010036600319011261014857610278610e57565b60243567ffffffffffffffff811161014857610298903690600401610e6d565b60649291923567ffffffffffffffff8111610148576102bb903690600401610e6d565b909160c43567ffffffffffffffff8111610148576102dd903690600401610e6d565b9160e43567ffffffffffffffff8111610148576102fe903690600401610e6d565b929093610309610ff6565b60843560a4351115610a7f57600160a060020a03881615610a385782156109f15785156109aa5760015498604051978861014081011067ffffffffffffffff6101408b011117610705576103b99761037d610391936103ad97600160a060020a038e6101408f01604052168d523691611056565b60208b015260443560408b01523691611056565b6060880152608435608088015260a43560a08801523691611056565b60c08501523691611056565b60e0820152600061010082015260006101208201528260005260026020526040600020600160a060020a03825116600160a060020a0319825416178155602082015180519067ffffffffffffffff821161070557819061041c6001850154610e9b565b601f8111610957575b50602090601f83116001146108e3576000926108d8575b5050816002029160080260020a6000190419161760018201555b60408201516002820155606082015180519067ffffffffffffffff82116107055781906104866003850154610e9b565b601f8111610885575b50602090601f831160011461081157600092610806575b5050816002029160080260020a6000190419161760038201555b6080820151600482015560a0820151600582015560c082015180519067ffffffffffffffff82116107055781906104fa6006850154610e9b565b601f81116107b3575b50602090601f831160011461073f57600092610734575b5050816002029160080260020a6000190419161760068201555b60e082015180519067ffffffffffffffff8211610705576105586007840154610e9b565b601f81116106be575b50602090601f83116001146106495760089392916000918361063e575b50508160020291840260020a6000190419161760078201555b019061010081015115159060ff61ff0061010061012086549401511515021692169061ffff19161717905560015491600019831461060f57600160209301600155600160a060020a036040519216817f5647077ba6faf0b3176f8589f0d752dc156994057008b88157cf05f35069c31e600080a38152f35b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b01519050878061057e565b906007840160005260206000209160005b601f19851681106106a65750926001926002926008969583601f1981161061068c575b50505002016007820155610597565b0151601f83168702840a600019041916905588808061067d565b9192602060018192868501518155019401920161065a565b6007840160005260206000206020601f8501048101602085106106fe575b6020601f840104820181106106f2575050610561565b600081556001016106dc565b50806106dc565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b01519050868061051a565b91506006840160005260206000209160005b601f198516811061079b5750918391600293600195601f19811610610780575b50505002016006820155610534565b01516008601f841602840a6000190419169055878080610771565b91926020600181928685015181550194019201610751565b9091506006840160005260206000206020601f8501048101602085106107ff575b90849392915b6020601f840104820181106107f0575050610503565b600081558594506001016107da565b50806107d4565b0151905086806104a6565b91506003840160005260206000209160005b601f198516811061086d5750918391600293600195601f19811610610852575b505050020160038201556104c0565b01516008601f841602840a6000190419169055878080610843565b91926020600181928685015181550194019201610823565b9091506003840160005260206000206020601f8501048101602085106108d1575b90849392915b6020601f840104820181106108c257505061048f565b600081558594506001016108ac565b50806108a6565b01519050868061043c565b91506001840160005260206000209160005b601f198516811061093f5750918391600293600195601f19811610610924575b50505002016001820155610456565b01516008601f841602840a6000190419169055878080610915565b919260206001819286850151815501940192016108f5565b9091506001840160005260206000206020601f8501048101602085106109a3575b90849392915b6020601f84010482018110610994575050610425565b6000815585945060010161097e565b5080610978565b606460405160e560020a62461bcd02815260206004820152601960248201527f43726f7020747970652063616e6e6f7420626520656d707479000000000000006044820152fd5b606460405160e560020a62461bcd02815260206004820152601b60248201527f4661726d6572206e616d652063616e6e6f7420626520656d70747900000000006044820152fd5b606460405160e560020a62461bcd02815260206004820152601660248201527f496e76616c6964206661726d65722061646472657373000000000000000000006044820152fd5b606460405160e560020a62461bcd02815260206004820152601a60248201527f5061796f7574206d75737420657863656564207072656d69756d0000000000006044820152fd5b346101485760208060031936011261014857600435610ae3610ff6565b80151580610ccb575b610af59061108d565b8060005260028252604060002090600882019182549260ff841615610c845761010060ff81860416610c3d573031946005840154809610610bf65794600094600160a060020a038695869586958b9a61ff001916179055541680917f7884580f743f908c98258afac53f9e0929cd6787b3488df80e096df15409ef8f89604051868152a35af13d15610bf1573d610b8b8161103a565b90610b996040519283610eef565b81526000833d92013e5b15610baa57005b6064906040519060e560020a62461bcd0282526004820152601660248201527f5061796f7574207472616e73666572206661696c6564000000000000000000006044820152fd5b610ba3565b6064876040519060e560020a62461bcd0282526004820152601d60248201527f496e73756666696369656e7420636f6e74726163742062616c616e63650000006044820152fd5b6064866040519060e560020a62461bcd0282526004820152601860248201527f5061796f757420616c72656164792070726f63657373656400000000000000006044820152fd5b6064856040519060e560020a62461bcd0282526004820152601360248201527f506f6c696379206e6f74206163636570746564000000000000000000000000006044820152fd5b506001548110610aec565b34610148576000366003190112610148576020600160a060020a0360005416604051908152f35b3461014857602036600319011261014857600435610d19610ff6565b80151580610dcc575b610d2b9061108d565b8060005260026020526040600020600881019081549160ff8316610d85576001600160a060020a039360ff19161790555416907f6c9508f7faeda8225292a6475bdf4716fca5e172e82c68af926d2895b56cc63a600080a3005b606460405160e560020a62461bcd02815260206004820152601760248201527f506f6c69637920616c72656164792061636365707465640000000000000000006044820152fd5b506001548110610d22565b3461014857600036600319011261014857610df0610ff6565b6000805473ffffffffffffffffffffffffffffffffffffffff1981168255600160a060020a03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101485760003660031901126101485760209030318152f35b60043590600160a060020a038216820361014857565b9181601f840112156101485782359167ffffffffffffffff8311610148576020838186019501011161014857565b9060016002830492168015610ee5575b6020831014610eb657565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f1691610eab565b90601f8019910116810190811067ffffffffffffffff82111761070557604052565b9060405191826000825492610f2584610e9b565b908184526001948581169081600014610f945750600114610f51575b5050610f4f92500383610eef565b565b9093915060005260209081600020936000915b818310610f7c575050610f4f93508201013880610f41565b85548884018501529485019487945091830191610f64565b915050610f4f94506020925060ff191682840152151581028201013880610f41565b919082519283825260005b848110610fe2575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610fc1565b600160a060020a0360005416330361100a57565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fd5b67ffffffffffffffff811161070557601f01601f191660200190565b9291926110628261103a565b916110706040519384610eef565b829481845281830111610148578281602093846000960137010152565b1561109457565b606460405160e560020a62461bcd02815260206004820152601160248201527f496e76616c696420706f6c6963792049440000000000000000000000000000006044820152fdfea2646970667358221220c0d90f23bf2298b2097e1bf43d840a6b8c2fbcab494eb3b226f403f0a47c898364736f6c63430008140033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "117:3533:2:-:0;;;;;;;878:10;1273:26:0;1269:95;;1297:1;117:3533:2;;878:10;-1:-1:-1;;;;;;117:3533:2;;;;;;;;;878:10;;-1:-1:-1;;;;;117:3533:2;;3052:40:0;;1297:1;3052:40;117:3533:2;;;;;;;;;;1269:95:0;1322:31;;117:3533:2;1322:31:0;;1297:1;1322:31;;;117:3533:2;1322:31:0;117:3533:2;;;",
  "deployedSourceMap": "117:3533:2:-:0;;;;;;;;;;-1:-1:-1;117:3533:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;117:3533:2;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;117:3533:2;;;2627:22:0;;;2623:91;;117:3533:2;;;-1:-1:-1;;;;;117:3533:2;;;;;;;3052:40:0;117:3533:2;3052:40:0;;117:3533:2;2623:91:0;117:3533:2;;;2672:31:0;;;117:3533:2;;2672:31:0;;117:3533:2;2672:31:0;117:3533:2;;;;;;;;;;-1:-1:-1;;117:3533:2;;;;;;;;497:39;117:3533;;;;;-1:-1:-1;;;;;117:3533:2;;;497:39;117:3533;497:39;;;:::i;:::-;;117:3533;;497:39;;;117:3533;497:39;117:3533;497:39;117:3533;497:39;;;:::i;:::-;;117:3533;497:39;;117:3533;497:39;;;;117:3533;;497:39;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;117:3533;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;117:3533:2;;;;;158:24;117:3533;;;;;;;;;;;;;-1:-1:-1;;117:3533:2;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;1500:62:0;;;;;:::i;:::-;117:3533:2;;;;1443:30;117:3533;;;-1:-1:-1;;;;;117:3533:2;;1523:28;117:3533;;1597:29;;117:3533;;1677:27;;117:3533;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;117:3533:2;;;;;;;;;;;;:::i;:::-;;1829:393;;117:3533;;;;1829:393;;117:3533;;;;:::i;:::-;;1829:393;;117:3533;;;;1829:393;;117:3533;;;;1829:393;;117:3533;;;;:::i;:::-;;1829:393;;117:3533;;;;:::i;:::-;;1829:393;;117:3533;;;1829:393;;117:3533;;1829:393;;;117:3533;;;;1801:8;117:3533;;;;;-1:-1:-1;;;;;117:3533:2;;;-1:-1:-1;;;;;117:3533:2;;;;;;;;1829:393;;117:3533;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1801:8;117:3533;;;;1801:8;117:3533;;;;;;;;;;;;;1829:393;;117:3533;1801:8;117:3533;;;;1829:393;;117:3533;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1801:8;117:3533;;;;1801:8;117:3533;;;;;;;;;;;;;1829:393;;117:3533;;;;;;1829:393;;117:3533;;;;;;1829:393;;117:3533;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1801:8;117:3533;;;;1801:8;117:3533;;;;;;;;;;;;;1829:393;;117:3533;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1801:8;117:3533;;;;1801:8;117:3533;;;;;;;;;;;;;1829:393;117:3533;1829:393;;117:3533;;;;;;;1829:393;117:3533;;1829:393;;117:3533;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;117:3533:2;;;;2337:49;;117:3533;2337:49;;117:3533;;;;;;;;;;;;;;;;;-1:-1:-1;117:3533:2;;;;;;;;;;;;;;;;;-1:-1:-1;;117:3533:2;;;;;;;;;;1801:8;117:3533;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;117:3533:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;117:3533:2;;;;;;;;;;;;;;;;;-1:-1:-1;117:3533:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;117:3533:2;;;;;;;;;;1801:8;117:3533;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;117:3533:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;117:3533:2;;;;;-1:-1:-1;117:3533:2;;;;;;;-1:-1:-1;117:3533:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;117:3533:2;;;;;;;;;;1801:8;117:3533;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;117:3533:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;117:3533:2;;;;;-1:-1:-1;117:3533:2;;;;;;;-1:-1:-1;117:3533:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;117:3533:2;;;;;;;;;;1801:8;117:3533;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;117:3533:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;117:3533:2;;;;;-1:-1:-1;117:3533:2;;;;;;;-1:-1:-1;;;;;117:3533:2;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;117:3533:2;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;117:3533:2;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;117:3533:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;993:13:2;;;:41;;;117:3533;985:71;;;:::i;:::-;117:3533;;;2930:8;117:3533;;;;;2968:17;;;;117:3533;;;;;;;;;;;;;;;;;;3098:4;3090:21;3115:19;;;;117:3533;3090:44;;;117:3533;;;;;-1:-1:-1;;;;;117:3533:2;;;;;;;;;;;;;;;;;;3227:69;117:3533;;;;;;3227:69;3336:66;;117:3533;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;117:3533:2;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;117:3533:2;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;117:3533:2;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;117:3533:2;;;;;;;;;;;;;;;;;993:41;-1:-1:-1;117:3533:2;;1010:24;;993:41;;117:3533;;;;;;-1:-1:-1;;117:3533:2;;;;;-1:-1:-1;;;;;117:3533:2;;;;;;;;;;;;;;;-1:-1:-1;;117:3533:2;;;;;;1500:62:0;;:::i;:::-;993:13:2;;;:41;;;117:3533;985:71;;;:::i;:::-;117:3533;;;2602:8;117:3533;;;;;2641:17;;;117:3533;;;;;;;;;;-1:-1:-1;;;;;117:3533:2;;;;;;;;;2747:47;;117:3533;2747:47;;117:3533;;;;;-1:-1:-1;;;;;117:3533:2;;;;;;;;;;;;;;;;;;993:41;-1:-1:-1;117:3533:2;;1010:24;;993:41;;117:3533;;;;;;-1:-1:-1;;117:3533:2;;;;1500:62:0;;:::i;:::-;117:3533:2;;;-1:-1:-1;;117:3533:2;;;;-1:-1:-1;;;;;117:3533:2;3052:40:0;117:3533:2;;3052:40:0;117:3533:2;;;;;;;-1:-1:-1;;117:3533:2;;;;;3585:4;;3577:21;117:3533;;;;;;;-1:-1:-1;;;;;117:3533:2;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;117:3533:2;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;117:3533:2;;;;-1:-1:-1;117:3533:2;;-1:-1:-1;117:3533:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;117:3533:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;117:3533:2;;;;;;;;;-1:-1:-1;117:3533:2;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;1796:162:0;-1:-1:-1;;;;;1710:6:0;117:3533:2;;735:10:1;1855:23:0;1851:101;;1796:162::o;1851:101::-;117:3533:2;;;1901:40:0;;;735:10:1;1901:40:0;;;117:3533:2;1901:40:0;117:3533:2;;;;;;;;-1:-1:-1;;117:3533:2;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;117:3533:2;;;;;;:::o;:::-;;;;:::o;:::-;;;;-1:-1:-1;;;;;117:3533:2;;;;;;;;;;;;;;;;;",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract CropInsurance is Ownable {\r\n    uint public nextPolicyId;\r\n    \r\n    struct Policy {\r\n        address farmerAddress;\r\n        string farmerName;\r\n        uint landSize;\r\n        string cropType;\r\n        uint premiumAmount;\r\n        uint payoutAmount;\r\n        string insuranceType;\r\n        string location;\r\n        bool isAccepted;\r\n        bool isPaid;\r\n    }\r\n\r\n    mapping(uint => Policy) public policies;\r\n    \r\n    // 🔥 THESE EVENTS WERE MISSING - CRITICAL FOR YOUR BACKEND\r\n    event PolicyRegistered(uint indexed policyId, address indexed farmer);\r\n    event PolicyAccepted(uint indexed policyId, address indexed farmer);\r\n    event PayoutTriggered(uint indexed policyId, address indexed farmer, uint amount);\r\n\r\n    constructor() Ownable(msg.sender) {\r\n        nextPolicyId = 1;\r\n    }\r\n\r\n    modifier onlyValidPolicy(uint _policyId) {\r\n        require(_policyId > 0 && _policyId < nextPolicyId, \"Invalid policy ID\");\r\n        _;\r\n    }\r\n\r\n    function registerPolicy(\r\n        address _farmerAddress, \r\n        string calldata _farmerName, \r\n        uint _landSize, \r\n        string calldata _cropType, \r\n        uint _premiumAmount, \r\n        uint _payoutAmount, \r\n        string calldata _insuranceType, \r\n        string calldata _location\r\n    ) external onlyOwner returns (uint) {\r\n        require(_payoutAmount > _premiumAmount, \"Payout must exceed premium\");\r\n        require(_farmerAddress != address(0), \"Invalid farmer address\");\r\n        require(bytes(_farmerName).length > 0, \"Farmer name cannot be empty\");\r\n        require(bytes(_cropType).length > 0, \"Crop type cannot be empty\");\r\n        \r\n        uint currentPolicyId = nextPolicyId;\r\n        policies[currentPolicyId] = Policy({\r\n            farmerAddress: _farmerAddress,\r\n            farmerName: _farmerName,\r\n            landSize: _landSize,\r\n            cropType: _cropType,\r\n            premiumAmount: _premiumAmount,\r\n            payoutAmount: _payoutAmount,\r\n            insuranceType: _insuranceType,\r\n            location: _location,\r\n            isAccepted: false,\r\n            isPaid: false\r\n        });\r\n        nextPolicyId++;\r\n        \r\n        // 🔥 THIS EVENT WAS MISSING - YOUR BACKEND NEEDS IT\r\n        emit PolicyRegistered(currentPolicyId, _farmerAddress);\r\n        \r\n        return currentPolicyId;\r\n    }\r\n\r\n    function acceptInsurance(uint _policyId) \r\n        external \r\n        onlyOwner \r\n        onlyValidPolicy(_policyId)\r\n    {\r\n        Policy storage policy = policies[_policyId];\r\n        require(!policy.isAccepted, \"Policy already accepted\");\r\n        policy.isAccepted = true;\r\n        \r\n        emit PolicyAccepted(_policyId, policy.farmerAddress);\r\n    }\r\n\r\n    function triggerPayout(uint _policyId) external onlyOwner onlyValidPolicy(_policyId) {\r\n        Policy storage policy = policies[_policyId];\r\n        require(policy.isAccepted, \"Policy not accepted\");\r\n        require(!policy.isPaid, \"Payout already processed\");\r\n        require(address(this).balance >= policy.payoutAmount, \"Insufficient contract balance\");\r\n\r\n        policy.isPaid = true;\r\n        \r\n        emit PayoutTriggered(_policyId, policy.farmerAddress, policy.payoutAmount);\r\n        \r\n        (bool success, ) = payable(policy.farmerAddress).call{value: policy.payoutAmount}(\"\");\r\n        require(success, \"Payout transfer failed\");\r\n    }\r\n    \r\n    // Helper functions\r\n    function getContractBalance() external view returns (uint) {\r\n        return address(this).balance;\r\n    }\r\n    \r\n    receive() external payable {}\r\n}\r\n",
  "sourcePath": "C:\\Users\\dwara\\crop-insurance-app\\smart-contract\\contracts\\CropInsurance.sol",
  "ast": {
    "absolutePath": "project:/contracts/CropInsurance.sol",
    "exportedSymbols": {
      "Context": [
        177
      ],
      "CropInsurance": [
        483
      ],
      "Ownable": [
        147
      ]
    },
    "id": 484,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 179,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 180,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 484,
        "sourceUnit": 148,
        "src": "61:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 181,
              "name": "Ownable",
              "nameLocations": [
                "143:7:2"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 147,
              "src": "143:7:2"
            },
            "id": 182,
            "nodeType": "InheritanceSpecifier",
            "src": "143:7:2"
          }
        ],
        "canonicalName": "CropInsurance",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 483,
        "linearizedBaseContracts": [
          483,
          147,
          177
        ],
        "name": "CropInsurance",
        "nameLocation": "126:13:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "cad0b8db",
            "id": 184,
            "mutability": "mutable",
            "name": "nextPolicyId",
            "nameLocation": "170:12:2",
            "nodeType": "VariableDeclaration",
            "scope": 483,
            "src": "158:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 183,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "158:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "CropInsurance.Policy",
            "id": 205,
            "members": [
              {
                "constant": false,
                "id": 186,
                "mutability": "mutable",
                "name": "farmerAddress",
                "nameLocation": "228:13:2",
                "nodeType": "VariableDeclaration",
                "scope": 205,
                "src": "220:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 185,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "220:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 188,
                "mutability": "mutable",
                "name": "farmerName",
                "nameLocation": "259:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 205,
                "src": "252:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 187,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "252:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 190,
                "mutability": "mutable",
                "name": "landSize",
                "nameLocation": "285:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 205,
                "src": "280:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 189,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "280:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 192,
                "mutability": "mutable",
                "name": "cropType",
                "nameLocation": "311:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 205,
                "src": "304:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 191,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "304:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 194,
                "mutability": "mutable",
                "name": "premiumAmount",
                "nameLocation": "335:13:2",
                "nodeType": "VariableDeclaration",
                "scope": 205,
                "src": "330:18:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 193,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "330:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 196,
                "mutability": "mutable",
                "name": "payoutAmount",
                "nameLocation": "364:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 205,
                "src": "359:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 195,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "359:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 198,
                "mutability": "mutable",
                "name": "insuranceType",
                "nameLocation": "394:13:2",
                "nodeType": "VariableDeclaration",
                "scope": 205,
                "src": "387:20:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 197,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "387:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 200,
                "mutability": "mutable",
                "name": "location",
                "nameLocation": "425:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 205,
                "src": "418:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 199,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "418:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 202,
                "mutability": "mutable",
                "name": "isAccepted",
                "nameLocation": "449:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 205,
                "src": "444:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 201,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "444:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 204,
                "mutability": "mutable",
                "name": "isPaid",
                "nameLocation": "475:6:2",
                "nodeType": "VariableDeclaration",
                "scope": 205,
                "src": "470:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 203,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "470:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Policy",
            "nameLocation": "202:6:2",
            "nodeType": "StructDefinition",
            "scope": 483,
            "src": "195:294:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d3e89483",
            "id": 210,
            "mutability": "mutable",
            "name": "policies",
            "nameLocation": "528:8:2",
            "nodeType": "VariableDeclaration",
            "scope": 483,
            "src": "497:39:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Policy_$205_storage_$",
              "typeString": "mapping(uint256 => struct CropInsurance.Policy)"
            },
            "typeName": {
              "id": 209,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 206,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "505:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "497:23:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Policy_$205_storage_$",
                "typeString": "mapping(uint256 => struct CropInsurance.Policy)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 208,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 207,
                  "name": "Policy",
                  "nameLocations": [
                    "513:6:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 205,
                  "src": "513:6:2"
                },
                "referencedDeclaration": 205,
                "src": "513:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Policy_$205_storage_ptr",
                  "typeString": "struct CropInsurance.Policy"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "5647077ba6faf0b3176f8589f0d752dc156994057008b88157cf05f35069c31e",
            "id": 216,
            "name": "PolicyRegistered",
            "nameLocation": "622:16:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 212,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "policyId",
                  "nameLocation": "652:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 216,
                  "src": "639:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 211,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "639:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 214,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "farmer",
                  "nameLocation": "678:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 216,
                  "src": "662:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "662:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "638:47:2"
            },
            "src": "616:70:2"
          },
          {
            "anonymous": false,
            "eventSelector": "6c9508f7faeda8225292a6475bdf4716fca5e172e82c68af926d2895b56cc63a",
            "id": 222,
            "name": "PolicyAccepted",
            "nameLocation": "698:14:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 218,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "policyId",
                  "nameLocation": "726:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 222,
                  "src": "713:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 217,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "713:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 220,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "farmer",
                  "nameLocation": "752:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 222,
                  "src": "736:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 219,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "736:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "712:47:2"
            },
            "src": "692:68:2"
          },
          {
            "anonymous": false,
            "eventSelector": "7884580f743f908c98258afac53f9e0929cd6787b3488df80e096df15409ef8f",
            "id": 230,
            "name": "PayoutTriggered",
            "nameLocation": "772:15:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 224,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "policyId",
                  "nameLocation": "801:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 230,
                  "src": "788:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 223,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "788:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 226,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "farmer",
                  "nameLocation": "827:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 230,
                  "src": "811:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 225,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "811:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 228,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "840:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 230,
                  "src": "835:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 227,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "835:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "787:60:2"
            },
            "src": "766:82:2"
          },
          {
            "body": {
              "id": 241,
              "nodeType": "Block",
              "src": "890:35:2",
              "statements": [
                {
                  "expression": {
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 237,
                      "name": "nextPolicyId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 184,
                      "src": "901:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "916:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "901:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 240,
                  "nodeType": "ExpressionStatement",
                  "src": "901:16:2"
                }
              ]
            },
            "id": 242,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 233,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "878:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "882:6:2",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "878:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 235,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 232,
                  "name": "Ownable",
                  "nameLocations": [
                    "870:7:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "870:7:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "870:19:2"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "867:2:2"
            },
            "returnParameters": {
              "id": 236,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "890:0:2"
            },
            "scope": 483,
            "src": "856:69:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 258,
              "nodeType": "Block",
              "src": "974:102:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 247,
                            "name": "_policyId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 244,
                            "src": "993:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1005:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "993:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 250,
                            "name": "_policyId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 244,
                            "src": "1010:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 251,
                            "name": "nextPolicyId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 184,
                            "src": "1022:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1010:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "993:41:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420706f6c696379204944",
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1036:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5a518a71c67ad9aa45f0b2ec9d3bd0cea3da308c65915b240c42263822ab5c2",
                          "typeString": "literal_string \"Invalid policy ID\""
                        },
                        "value": "Invalid policy ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5a518a71c67ad9aa45f0b2ec9d3bd0cea3da308c65915b240c42263822ab5c2",
                          "typeString": "literal_string \"Invalid policy ID\""
                        }
                      ],
                      "id": 246,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "985:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "985:71:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 256,
                  "nodeType": "ExpressionStatement",
                  "src": "985:71:2"
                },
                {
                  "id": 257,
                  "nodeType": "PlaceholderStatement",
                  "src": "1067:1:2"
                }
              ]
            },
            "id": 259,
            "name": "onlyValidPolicy",
            "nameLocation": "942:15:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 244,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nameLocation": "963:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "958:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 243,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "958:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "957:16:2"
            },
            "src": "933:143:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 352,
              "nodeType": "Block",
              "src": "1424:1013:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 283,
                          "name": "_payoutAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 271,
                          "src": "1443:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 284,
                          "name": "_premiumAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 269,
                          "src": "1459:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1443:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061796f7574206d75737420657863656564207072656d69756d",
                        "id": 286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1475:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e836157f24cf7b9201c1be0e700984efa4ab07045e1c72828d92402e82656d92",
                          "typeString": "literal_string \"Payout must exceed premium\""
                        },
                        "value": "Payout must exceed premium"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e836157f24cf7b9201c1be0e700984efa4ab07045e1c72828d92402e82656d92",
                          "typeString": "literal_string \"Payout must exceed premium\""
                        }
                      ],
                      "id": 282,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1435:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1435:69:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 288,
                  "nodeType": "ExpressionStatement",
                  "src": "1435:69:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 290,
                          "name": "_farmerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 261,
                          "src": "1523:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 293,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1549:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1541:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 291,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1541:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1541:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1523:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206661726d65722061646472657373",
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1553:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1fd6eabb0e9133bedb9e89b6e5a0addd58186b59f9d3b1620af501f8684830eb",
                          "typeString": "literal_string \"Invalid farmer address\""
                        },
                        "value": "Invalid farmer address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1fd6eabb0e9133bedb9e89b6e5a0addd58186b59f9d3b1620af501f8684830eb",
                          "typeString": "literal_string \"Invalid farmer address\""
                        }
                      ],
                      "id": 289,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1515:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1515:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 298,
                  "nodeType": "ExpressionStatement",
                  "src": "1515:63:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 302,
                                "name": "_farmerName",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 263,
                                "src": "1603:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              ],
                              "id": 301,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1597:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 300,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "1597:5:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1597:18:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1616:6:2",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1597:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1625:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1597:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661726d6572206e616d652063616e6e6f7420626520656d707479",
                        "id": 307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1628:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45cfc403798a12f528b4df18b8fbca10a33453a1a7a9e4ea48592d76a9c646f1",
                          "typeString": "literal_string \"Farmer name cannot be empty\""
                        },
                        "value": "Farmer name cannot be empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45cfc403798a12f528b4df18b8fbca10a33453a1a7a9e4ea48592d76a9c646f1",
                          "typeString": "literal_string \"Farmer name cannot be empty\""
                        }
                      ],
                      "id": 299,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1589:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1589:69:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 309,
                  "nodeType": "ExpressionStatement",
                  "src": "1589:69:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 313,
                                "name": "_cropType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 267,
                                "src": "1683:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              ],
                              "id": 312,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1677:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 311,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "1677:5:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 314,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1677:16:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1694:6:2",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1677:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1703:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1677:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43726f7020747970652063616e6e6f7420626520656d707479",
                        "id": 318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1706:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76df2ccd6b3e6069462d14ca80504c97024ffda893e6beeeecfb45757e65c5f6",
                          "typeString": "literal_string \"Crop type cannot be empty\""
                        },
                        "value": "Crop type cannot be empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76df2ccd6b3e6069462d14ca80504c97024ffda893e6beeeecfb45757e65c5f6",
                          "typeString": "literal_string \"Crop type cannot be empty\""
                        }
                      ],
                      "id": 310,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1669:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1669:65:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 320,
                  "nodeType": "ExpressionStatement",
                  "src": "1669:65:2"
                },
                {
                  "assignments": [
                    322
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 322,
                      "mutability": "mutable",
                      "name": "currentPolicyId",
                      "nameLocation": "1760:15:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 352,
                      "src": "1755:20:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 321,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1755:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 324,
                  "initialValue": {
                    "id": 323,
                    "name": "nextPolicyId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 184,
                    "src": "1778:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1755:35:2"
                },
                {
                  "expression": {
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 325,
                        "name": "policies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 210,
                        "src": "1801:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Policy_$205_storage_$",
                          "typeString": "mapping(uint256 => struct CropInsurance.Policy storage ref)"
                        }
                      },
                      "id": 327,
                      "indexExpression": {
                        "id": 326,
                        "name": "currentPolicyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 322,
                        "src": "1810:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1801:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Policy_$205_storage",
                        "typeString": "struct CropInsurance.Policy storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 329,
                          "name": "_farmerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 261,
                          "src": "1866:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 330,
                          "name": "_farmerName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 263,
                          "src": "1907:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        {
                          "id": 331,
                          "name": "_landSize",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 265,
                          "src": "1943:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 332,
                          "name": "_cropType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 267,
                          "src": "1977:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        {
                          "id": 333,
                          "name": "_premiumAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 269,
                          "src": "2016:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 334,
                          "name": "_payoutAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 271,
                          "src": "2059:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 335,
                          "name": "_insuranceType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 273,
                          "src": "2102:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        {
                          "id": 336,
                          "name": "_location",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 275,
                          "src": "2141:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2177:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2205:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          },
                          {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 328,
                        "name": "Policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 205,
                        "src": "1829:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Policy_$205_storage_ptr_$",
                          "typeString": "type(struct CropInsurance.Policy storage pointer)"
                        }
                      },
                      "id": 339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "1851:13:2",
                        "1895:10:2",
                        "1933:8:2",
                        "1967:8:2",
                        "2001:13:2",
                        "2045:12:2",
                        "2087:13:2",
                        "2131:8:2",
                        "2165:10:2",
                        "2197:6:2"
                      ],
                      "names": [
                        "farmerAddress",
                        "farmerName",
                        "landSize",
                        "cropType",
                        "premiumAmount",
                        "payoutAmount",
                        "insuranceType",
                        "location",
                        "isAccepted",
                        "isPaid"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1829:393:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Policy_$205_memory_ptr",
                        "typeString": "struct CropInsurance.Policy memory"
                      }
                    },
                    "src": "1801:421:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Policy_$205_storage",
                      "typeString": "struct CropInsurance.Policy storage ref"
                    }
                  },
                  "id": 341,
                  "nodeType": "ExpressionStatement",
                  "src": "1801:421:2"
                },
                {
                  "expression": {
                    "id": 343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "2233:14:2",
                    "subExpression": {
                      "id": 342,
                      "name": "nextPolicyId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 184,
                      "src": "2233:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 344,
                  "nodeType": "ExpressionStatement",
                  "src": "2233:14:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 346,
                        "name": "currentPolicyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 322,
                        "src": "2354:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 347,
                        "name": "_farmerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 261,
                        "src": "2371:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 345,
                      "name": "PolicyRegistered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 216,
                      "src": "2337:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2337:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 349,
                  "nodeType": "EmitStatement",
                  "src": "2332:54:2"
                },
                {
                  "expression": {
                    "id": 350,
                    "name": "currentPolicyId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 322,
                    "src": "2414:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 281,
                  "id": 351,
                  "nodeType": "Return",
                  "src": "2407:22:2"
                }
              ]
            },
            "functionSelector": "c5b2910d",
            "id": 353,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 278,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 277,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1399:9:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "1399:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1399:9:2"
              }
            ],
            "name": "registerPolicy",
            "nameLocation": "1093:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 261,
                  "mutability": "mutable",
                  "name": "_farmerAddress",
                  "nameLocation": "1126:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 353,
                  "src": "1118:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 260,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1118:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 263,
                  "mutability": "mutable",
                  "name": "_farmerName",
                  "nameLocation": "1168:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 353,
                  "src": "1152:27:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 262,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1152:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 265,
                  "mutability": "mutable",
                  "name": "_landSize",
                  "nameLocation": "1196:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 353,
                  "src": "1191:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1191:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 267,
                  "mutability": "mutable",
                  "name": "_cropType",
                  "nameLocation": "1233:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 353,
                  "src": "1217:25:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 266,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1217:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 269,
                  "mutability": "mutable",
                  "name": "_premiumAmount",
                  "nameLocation": "1259:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 353,
                  "src": "1254:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 268,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1254:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 271,
                  "mutability": "mutable",
                  "name": "_payoutAmount",
                  "nameLocation": "1290:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 353,
                  "src": "1285:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 270,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1285:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 273,
                  "mutability": "mutable",
                  "name": "_insuranceType",
                  "nameLocation": "1331:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 353,
                  "src": "1315:30:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 272,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1315:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 275,
                  "mutability": "mutable",
                  "name": "_location",
                  "nameLocation": "1373:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 353,
                  "src": "1357:25:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 274,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1357:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1107:282:2"
            },
            "returnParameters": {
              "id": 281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 280,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 353,
                  "src": "1418:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 279,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1418:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1417:6:2"
            },
            "scope": 483,
            "src": "1084:1353:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 389,
              "nodeType": "Block",
              "src": "2567:235:2",
              "statements": [
                {
                  "assignments": [
                    365
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 365,
                      "mutability": "mutable",
                      "name": "policy",
                      "nameLocation": "2593:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 389,
                      "src": "2578:21:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Policy_$205_storage_ptr",
                        "typeString": "struct CropInsurance.Policy"
                      },
                      "typeName": {
                        "id": 364,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 363,
                          "name": "Policy",
                          "nameLocations": [
                            "2578:6:2"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 205,
                          "src": "2578:6:2"
                        },
                        "referencedDeclaration": 205,
                        "src": "2578:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$205_storage_ptr",
                          "typeString": "struct CropInsurance.Policy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 369,
                  "initialValue": {
                    "baseExpression": {
                      "id": 366,
                      "name": "policies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 210,
                      "src": "2602:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Policy_$205_storage_$",
                        "typeString": "mapping(uint256 => struct CropInsurance.Policy storage ref)"
                      }
                    },
                    "id": 368,
                    "indexExpression": {
                      "id": 367,
                      "name": "_policyId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 355,
                      "src": "2611:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2602:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Policy_$205_storage",
                      "typeString": "struct CropInsurance.Policy storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2578:43:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2640:18:2",
                        "subExpression": {
                          "expression": {
                            "id": 371,
                            "name": "policy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 365,
                            "src": "2641:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Policy_$205_storage_ptr",
                              "typeString": "struct CropInsurance.Policy storage pointer"
                            }
                          },
                          "id": 372,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2648:10:2",
                          "memberName": "isAccepted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 202,
                          "src": "2641:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6c69637920616c7265616479206163636570746564",
                        "id": 374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2660:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_532042e99375d5d292358ec345a011a96dd999b7ee2b97fa8ec993bc01f90257",
                          "typeString": "literal_string \"Policy already accepted\""
                        },
                        "value": "Policy already accepted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_532042e99375d5d292358ec345a011a96dd999b7ee2b97fa8ec993bc01f90257",
                          "typeString": "literal_string \"Policy already accepted\""
                        }
                      ],
                      "id": 370,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2632:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2632:54:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 376,
                  "nodeType": "ExpressionStatement",
                  "src": "2632:54:2"
                },
                {
                  "expression": {
                    "id": 381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 377,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 365,
                        "src": "2697:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$205_storage_ptr",
                          "typeString": "struct CropInsurance.Policy storage pointer"
                        }
                      },
                      "id": 379,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2704:10:2",
                      "memberName": "isAccepted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 202,
                      "src": "2697:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2717:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2697:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 382,
                  "nodeType": "ExpressionStatement",
                  "src": "2697:24:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 384,
                        "name": "_policyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 355,
                        "src": "2762:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 385,
                          "name": "policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 365,
                          "src": "2773:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Policy_$205_storage_ptr",
                            "typeString": "struct CropInsurance.Policy storage pointer"
                          }
                        },
                        "id": 386,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2780:13:2",
                        "memberName": "farmerAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 186,
                        "src": "2773:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 383,
                      "name": "PolicyAccepted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 222,
                      "src": "2747:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2747:47:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 388,
                  "nodeType": "EmitStatement",
                  "src": "2742:52:2"
                }
              ]
            },
            "functionSelector": "76653b3a",
            "id": 390,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 358,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 357,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2515:9:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "2515:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2515:9:2"
              },
              {
                "arguments": [
                  {
                    "id": 360,
                    "name": "_policyId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 355,
                    "src": "2551:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 361,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 359,
                  "name": "onlyValidPolicy",
                  "nameLocations": [
                    "2535:15:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 259,
                  "src": "2535:15:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2535:26:2"
              }
            ],
            "name": "acceptInsurance",
            "nameLocation": "2454:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 355,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nameLocation": "2475:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 390,
                  "src": "2470:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 354,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2470:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2469:16:2"
            },
            "returnParameters": {
              "id": 362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2567:0:2"
            },
            "scope": 483,
            "src": "2445:357:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 465,
              "nodeType": "Block",
              "src": "2895:568:2",
              "statements": [
                {
                  "assignments": [
                    402
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 402,
                      "mutability": "mutable",
                      "name": "policy",
                      "nameLocation": "2921:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 465,
                      "src": "2906:21:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Policy_$205_storage_ptr",
                        "typeString": "struct CropInsurance.Policy"
                      },
                      "typeName": {
                        "id": 401,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 400,
                          "name": "Policy",
                          "nameLocations": [
                            "2906:6:2"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 205,
                          "src": "2906:6:2"
                        },
                        "referencedDeclaration": 205,
                        "src": "2906:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$205_storage_ptr",
                          "typeString": "struct CropInsurance.Policy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 406,
                  "initialValue": {
                    "baseExpression": {
                      "id": 403,
                      "name": "policies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 210,
                      "src": "2930:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Policy_$205_storage_$",
                        "typeString": "mapping(uint256 => struct CropInsurance.Policy storage ref)"
                      }
                    },
                    "id": 405,
                    "indexExpression": {
                      "id": 404,
                      "name": "_policyId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 392,
                      "src": "2939:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2930:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Policy_$205_storage",
                      "typeString": "struct CropInsurance.Policy storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2906:43:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 408,
                          "name": "policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 402,
                          "src": "2968:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Policy_$205_storage_ptr",
                            "typeString": "struct CropInsurance.Policy storage pointer"
                          }
                        },
                        "id": 409,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2975:10:2",
                        "memberName": "isAccepted",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 202,
                        "src": "2968:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6c696379206e6f74206163636570746564",
                        "id": 410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2987:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d2fa9243ff2b16b0457491f729546a13457da5443b4050e843dd0226645b757",
                          "typeString": "literal_string \"Policy not accepted\""
                        },
                        "value": "Policy not accepted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d2fa9243ff2b16b0457491f729546a13457da5443b4050e843dd0226645b757",
                          "typeString": "literal_string \"Policy not accepted\""
                        }
                      ],
                      "id": 407,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2960:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2960:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 412,
                  "nodeType": "ExpressionStatement",
                  "src": "2960:49:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3028:14:2",
                        "subExpression": {
                          "expression": {
                            "id": 414,
                            "name": "policy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 402,
                            "src": "3029:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Policy_$205_storage_ptr",
                              "typeString": "struct CropInsurance.Policy storage pointer"
                            }
                          },
                          "id": 415,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3036:6:2",
                          "memberName": "isPaid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 204,
                          "src": "3029:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061796f757420616c72656164792070726f636573736564",
                        "id": 417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3044:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f54947460f3c5ed63ec51da5aba0bfb5aafbc85ac94a1eb44438c9cc9bb52adf",
                          "typeString": "literal_string \"Payout already processed\""
                        },
                        "value": "Payout already processed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f54947460f3c5ed63ec51da5aba0bfb5aafbc85ac94a1eb44438c9cc9bb52adf",
                          "typeString": "literal_string \"Payout already processed\""
                        }
                      ],
                      "id": 413,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3020:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3020:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 419,
                  "nodeType": "ExpressionStatement",
                  "src": "3020:51:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 423,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "3098:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CropInsurance_$483",
                                  "typeString": "contract CropInsurance"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CropInsurance_$483",
                                  "typeString": "contract CropInsurance"
                                }
                              ],
                              "id": 422,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3090:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 421,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3090:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 424,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3090:13:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3104:7:2",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "3090:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 426,
                            "name": "policy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 402,
                            "src": "3115:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Policy_$205_storage_ptr",
                              "typeString": "struct CropInsurance.Policy storage pointer"
                            }
                          },
                          "id": 427,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3122:12:2",
                          "memberName": "payoutAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 196,
                          "src": "3115:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3090:44:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e7420636f6e74726163742062616c616e6365",
                        "id": 429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3136:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
                          "typeString": "literal_string \"Insufficient contract balance\""
                        },
                        "value": "Insufficient contract balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
                          "typeString": "literal_string \"Insufficient contract balance\""
                        }
                      ],
                      "id": 420,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3082:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3082:86:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 431,
                  "nodeType": "ExpressionStatement",
                  "src": "3082:86:2"
                },
                {
                  "expression": {
                    "id": 436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 432,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 402,
                        "src": "3181:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Policy_$205_storage_ptr",
                          "typeString": "struct CropInsurance.Policy storage pointer"
                        }
                      },
                      "id": 434,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3188:6:2",
                      "memberName": "isPaid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 204,
                      "src": "3181:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3197:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3181:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 437,
                  "nodeType": "ExpressionStatement",
                  "src": "3181:20:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 439,
                        "name": "_policyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 392,
                        "src": "3243:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 440,
                          "name": "policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 402,
                          "src": "3254:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Policy_$205_storage_ptr",
                            "typeString": "struct CropInsurance.Policy storage pointer"
                          }
                        },
                        "id": 441,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3261:13:2",
                        "memberName": "farmerAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 186,
                        "src": "3254:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 442,
                          "name": "policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 402,
                          "src": "3276:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Policy_$205_storage_ptr",
                            "typeString": "struct CropInsurance.Policy storage pointer"
                          }
                        },
                        "id": 443,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3283:12:2",
                        "memberName": "payoutAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 196,
                        "src": "3276:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 438,
                      "name": "PayoutTriggered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 230,
                      "src": "3227:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256)"
                      }
                    },
                    "id": 444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3227:69:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 445,
                  "nodeType": "EmitStatement",
                  "src": "3222:74:2"
                },
                {
                  "assignments": [
                    447,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 447,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "3323:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 465,
                      "src": "3318:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 446,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3318:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 459,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3399:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 450,
                                "name": "policy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 402,
                                "src": "3344:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Policy_$205_storage_ptr",
                                  "typeString": "struct CropInsurance.Policy storage pointer"
                                }
                              },
                              "id": 451,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3351:13:2",
                              "memberName": "farmerAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 186,
                              "src": "3344:20:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 449,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3336:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 448,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3336:8:2",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3336:29:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3366:4:2",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "3336:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 454,
                            "name": "policy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 402,
                            "src": "3378:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Policy_$205_storage_ptr",
                              "typeString": "struct CropInsurance.Policy storage pointer"
                            }
                          },
                          "id": 455,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3385:12:2",
                          "memberName": "payoutAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 196,
                          "src": "3378:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "3336:62:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3336:66:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3317:85:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 461,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 447,
                        "src": "3421:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061796f7574207472616e73666572206661696c6564",
                        "id": 462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3430:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df47d9a2b93002a4b526fa8046117549d9ba4340c3ddd5b0b8f0128771bf7cf7",
                          "typeString": "literal_string \"Payout transfer failed\""
                        },
                        "value": "Payout transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df47d9a2b93002a4b526fa8046117549d9ba4340c3ddd5b0b8f0128771bf7cf7",
                          "typeString": "literal_string \"Payout transfer failed\""
                        }
                      ],
                      "id": 460,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3413:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3413:42:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 464,
                  "nodeType": "ExpressionStatement",
                  "src": "3413:42:2"
                }
              ]
            },
            "functionSelector": "b1b358d4",
            "id": 466,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 395,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 394,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2858:9:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "2858:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2858:9:2"
              },
              {
                "arguments": [
                  {
                    "id": 397,
                    "name": "_policyId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 392,
                    "src": "2884:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 398,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 396,
                  "name": "onlyValidPolicy",
                  "nameLocations": [
                    "2868:15:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 259,
                  "src": "2868:15:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2868:26:2"
              }
            ],
            "name": "triggerPayout",
            "nameLocation": "2819:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 392,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nameLocation": "2838:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 466,
                  "src": "2833:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 391,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2833:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2832:16:2"
            },
            "returnParameters": {
              "id": 399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2895:0:2"
            },
            "scope": 483,
            "src": "2810:653:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 477,
              "nodeType": "Block",
              "src": "3559:47:2",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 473,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "3585:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CropInsurance_$483",
                            "typeString": "contract CropInsurance"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_CropInsurance_$483",
                            "typeString": "contract CropInsurance"
                          }
                        ],
                        "id": 472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3577:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 471,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3577:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3577:13:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3591:7:2",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "3577:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 470,
                  "id": 476,
                  "nodeType": "Return",
                  "src": "3570:28:2"
                }
              ]
            },
            "functionSelector": "6f9fb98a",
            "id": 478,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractBalance",
            "nameLocation": "3509:18:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3527:2:2"
            },
            "returnParameters": {
              "id": 470,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 469,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 478,
                  "src": "3553:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 468,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3553:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3552:6:2"
            },
            "scope": 483,
            "src": "3500:106:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 481,
              "nodeType": "Block",
              "src": "3645:2:2",
              "statements": []
            },
            "id": 482,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3625:2:2"
            },
            "returnParameters": {
              "id": 480,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3645:0:2"
            },
            "scope": 483,
            "src": "3618:29:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 484,
        "src": "117:3533:2",
        "usedErrors": [
          13,
          18
        ],
        "usedEvents": [
          24,
          216,
          222,
          230
        ]
      }
    ],
    "src": "33:3619:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.20+commit.a1b79de6.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x7884580f743f908c98258afac53f9e0929cd6787b3488df80e096df15409ef8f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "policyId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "farmer",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "PayoutTriggered",
          "type": "event"
        },
        "0x6c9508f7faeda8225292a6475bdf4716fca5e172e82c68af926d2895b56cc63a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "policyId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "farmer",
              "type": "address"
            }
          ],
          "name": "PolicyAccepted",
          "type": "event"
        },
        "0x5647077ba6faf0b3176f8589f0d752dc156994057008b88157cf05f35069c31e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "policyId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "farmer",
              "type": "address"
            }
          ],
          "name": "PolicyRegistered",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x87630e069e8D168E8E8f6d11dB4adCfead3F9e16",
      "transactionHash": "0x22ce4951a7231056b1daeea4260ca6fc305478cf58be52d596da2d621cf936bc"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-08-09T16:46:46.085Z",
  "networkType": "ethereum",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}